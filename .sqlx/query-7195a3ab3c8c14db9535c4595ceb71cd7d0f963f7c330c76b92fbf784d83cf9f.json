{
  "db_name": "PostgreSQL",
  "query": "\n        WITH usr AS (\n            SELECT id, ops_name, usr_type\n            FROM usrs\n            WHERE tele_id = $5 AND is_valid = TRUE\n        ),\n        upsert_availability AS (\n            INSERT INTO availability (usr_id, avail, ict_type, remarks, planned)\n            VALUES (\n                (SELECT id FROM usr),\n                $1,\n                $2,\n                $3,\n                COALESCE($4, FALSE)\n            )\n            ON CONFLICT (usr_id, avail) DO UPDATE\n                SET\n                    ict_type = EXCLUDED.ict_type,\n                    remarks = COALESCE(EXCLUDED.remarks, availability.remarks),\n                    planned = COALESCE(EXCLUDED.planned, availability.planned)\n            RETURNING *\n        ),\n        notification_handling AS (\n            SELECT\n                upsert_availability.planned AS new_planned,\n                upsert_availability.id AS availability_id,\n                upsert_availability.avail AS avail_date\n            FROM upsert_availability\n        ),\n        invalidate_notifications AS (\n            UPDATE scheduled_notifications\n            SET is_valid = FALSE\n            WHERE avail_id = (SELECT availability_id FROM notification_handling)\n              AND sent = FALSE\n              AND (SELECT new_planned FROM notification_handling) = FALSE\n            RETURNING id\n        ),\n        schedule_notifications AS (\n            INSERT INTO scheduled_notifications (avail_id, scheduled_time)\n            SELECT\n                (SELECT availability_id FROM notification_handling),\n                times.scheduled_time\n            FROM (\n                -- Immediate Notification\n                SELECT NOW() + INTERVAL '5 mins' AS scheduled_time\n                UNION ALL\n                -- 5 Days Prior Notification (only if at least 5 days remain)\n                SELECT\n                    (SELECT avail_date FROM notification_handling)::timestamp\n                    + INTERVAL '09 hours'\n                    - INTERVAL '5 days' AS scheduled_time\n                WHERE (SELECT avail_date FROM notification_handling) - CURRENT_DATE >= 5\n                UNION ALL\n                -- 2 Days Prior Notification (only if at least 2 days remain)\n                SELECT\n                    (SELECT avail_date FROM notification_handling)::timestamp\n                    + INTERVAL '09 hours'\n                    - INTERVAL '2 days' AS scheduled_time\n                WHERE (SELECT avail_date FROM notification_handling) - CURRENT_DATE >= 2\n            ) AS times\n            WHERE (SELECT new_planned FROM notification_handling) = TRUE\n            RETURNING id\n        )\n        SELECT\n            upsert_availability.id,\n            usr.ops_name,\n            usr.usr_type AS \"usr_type: _\",\n            upsert_availability.avail,\n            upsert_availability.ict_type AS \"ict_type: _\",\n            upsert_availability.remarks,\n            upsert_availability.planned,\n            upsert_availability.saf100,\n            upsert_availability.attended,\n            upsert_availability.is_valid,\n            upsert_availability.created,\n            upsert_availability.updated\n        FROM upsert_availability\n        JOIN usr ON upsert_availability.usr_id = usr.id;\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "ops_name",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "usr_type: _",
        "type_info": {
          "Custom": {
            "name": "user_type_enum",
            "kind": {
              "Enum": [
                "staff",
                "ns",
                "active"
              ]
            }
          }
        }
      },
      {
        "ordinal": 3,
        "name": "avail",
        "type_info": "Date"
      },
      {
        "ordinal": 4,
        "name": "ict_type: _",
        "type_info": {
          "Custom": {
            "name": "ict_enum",
            "kind": {
              "Enum": [
                "live",
                "sims",
                "other"
              ]
            }
          }
        }
      },
      {
        "ordinal": 5,
        "name": "remarks",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "planned",
        "type_info": "Bool"
      },
      {
        "ordinal": 7,
        "name": "saf100",
        "type_info": "Bool"
      },
      {
        "ordinal": 8,
        "name": "attended",
        "type_info": "Bool"
      },
      {
        "ordinal": 9,
        "name": "is_valid",
        "type_info": "Bool"
      },
      {
        "ordinal": 10,
        "name": "created",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 11,
        "name": "updated",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Date",
        {
          "Custom": {
            "name": "ict_enum",
            "kind": {
              "Enum": [
                "live",
                "sims",
                "other"
              ]
            }
          }
        },
        "Text",
        "Bool",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false
    ]
  },
  "hash": "7195a3ab3c8c14db9535c4595ceb71cd7d0f963f7c330c76b92fbf784d83cf9f"
}
